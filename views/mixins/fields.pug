mixin text-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      input.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="text",name=field.name,title=field.title,required=field.required,readonly=readonly,value=value,placeholder=field.placeholder)
      if field.help
        small.form-text.text-muted
          =field.help

mixin url-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      input.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="url",name=field.name,title=field.title,required=field.required,readonly=readonly,value=value,placeholder=field.placeholder)
      if field.help
        small.form-text.text-muted
          =field.help

mixin hidden-field(field, value)
  input(type="hidden",name=field.name,value=value,class=field.class)
          
mixin email-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      input.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="email",name=field.name,title=field.title,required=field.required,readonly=readonly,value=value,placeholder=field.placeholder)
      if field.help
        small.form-text.text-muted
          =field.help
          
mixin date-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      if readonly
        .date-time-readonly(data-format="L")
          =value
      else
        input.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="text",name=field.name,title=field.title,required=field.required,readonly=readonly,data-iso-date=value,data-type="date",value=value,placeholder=field.placeholder)
        if field.help
          small.form-text.text-muted
            =field.help
          
mixin date-time-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      if readonly
        .date-time-readonly(data-format="LLL")
          =value
      else
        input.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="text",name=field.name,title=field.title,required=field.required,readonly=readonly,data-iso-date=value,data-type="date-time",value=value,placeholder=field.placeholder)
        if field.help
          small.form-text.text-muted
            =field.help

mixin time-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      if readonly
        .date-time-readonly(data-format="LT")
          =value
      else
        input.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="text",name=field.name,title=field.title,required=field.required,readonly=readonly,data-iso-date=value,data-type="time",value=value,placeholder=field.placeholder)
        if field.help
          small.form-text.text-muted
            =field.help
          
mixin number-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      input.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="number",name=field.name,title=field.title,required=field.required,min=field.min,max=field.max,step=field.step,readonly=readonly,value=value||field.default,lang='fi',placeholder=field.placeholder)
      if field.help
        small.form-text.text-muted
          =field.help
          
mixin boolean-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    .col-12
      .form-check
        label.form-check-label
          if readonly
            if value
              i.fa.fa-check-square-o(aria-hidden="true")
            else
              i.fa.fa-square-o(aria-hidden="true")
          if !readonly
            input.form-check-input(type="checkbox",name=field.name,title=field.title,checked=value||field.checked,value="true")
            | 
          =field.title
          if field.required
            |&nbsp;*
      if field.help
        small.form-text.text-muted
          =field.help

mixin radio-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      each option in field.options
        .form-check
          if readonly
            if value == option.name
              i.fa.fa-dot-circle-o(aria-hidden="true")
            else
              i.fa.fa-circle-o(aria-hidden="true")
          else
            input.form-check-input(id='mfri-' + field.name + '-' + option.name, type="radio",name=field.name, value=option.name,checked=(value && value == option.name) || (!value && option.checked))
          | 
          label.form-check-label(for='mfri-' + field.name + '-' + option.name)
            span
              =option.text
      if field.help
        small.form-text.text-muted
          =field.help

mixin select-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      select.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name, name=field.name,title=field.title,required=field.required,readonly=readonly)
        option(value='') Valitse
        each option in field.options
          option(value=option.name,selected=(value && value == option.name) || (!value && option.selected))
            =option.text
      if field.help
        small.form-text.text-muted
          =field.help

mixin autocomplete-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12.sss
      input.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="text",data-name=field.name,title=field.title,required=field.required,readonly=readonly,value=value,data-source-url=field['source-url'],data-type="autocomplete",placeholder=field.placeholder)
      input(type="hidden",name=field.name)
      if field.help
        small.form-text.text-muted
          =field.help

mixin autocomplete-multiple-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      input.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="text",data-name=field.name,title=field.title,data-required=field.required,readonly=readonly,value=value,data-source-url=field['source-url'],data-type="autocomplete-multiple",placeholder=field.placeholder)
      input(type="hidden",name=field.name)
      if field.help
        small.form-text.text-muted
          =field.help

mixin checklist-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      each option in field.options
        .form-check(class=field['display-inline'] ? 'form-check-inline' : '')
          label.form-check-label
            if readonly
              if value && value.length && value.indexOf(option.name) != -1
                i.fa.fa-check-square-o(aria-hidden="true")
              else
                i.fa.fa-square-o(aria-hidden="true")
            else
              input.form-check-input(type="checkbox",name=field.name, value=option.name,checked=(value && value.length && value.indexOf(option.name) != -1) || (!value && option.checked))
            | 
          =option.text
      if field.help
        small.form-text.text-muted
          =field.help
          
mixin memo-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      textarea.form-control(aria-labelledby=id='field-' + field.name,id='field-' + field.name,name=field.name,title=field.title,required=field.required,readonly=readonly,placeholder=field.placeholder)
        =value
      if field.help
        small.form-text.text-muted
          =field.help          
          
mixin files-field(field, fileMetas, readonly)
  - var uploadUrl = field['upload-url'] ? field['upload-url'] : '/upload/'
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    if field.title
      .col-12
        label(for='field-' + field.name)
          =field.title
          if field.required
            |&nbsp;*
    .col-12
      if readonly
        if fileMetas
          each fileMeta in fileMetas
            .row
              .col-12
                a(href=uploadUrl + fileMeta.fileData,target='_blank')
                  =fileMeta.originalname
      else
        .file-component(data-field-name=field.name, data-upload-url=uploadUrl, data-single-file=field['single-file'], data-only-images=field['only-images'], data-max-file-size=field['max-file-size'])
          button.add-file-button.btn.btn-success
            |+ Lisää tiedosto
          input.form-control-file(aria-labelledby=id='field-' + field.name,id='field-' + field.name,type="file",multiple="multiple",name='file',title=field.title,required=field.required,readonly=readonly,placeholder=field.placeholder)
          .progress
            .progress-bar(role='progressbar',aria-valuemin='0',aria-valuemax='100',aria-valuenow='0')
          .files
            if fileMetas
              each fileMeta in fileMetas
                .file.row
                  .col-12
                    input(name='attachments', value=fileMeta.fileData, type='hidden')
                    a(href=uploadUrl + fileMeta.fileData, target='blank')
                      =fileMeta.originalname
                    button.remove-file-button.btn.btn-danger.btn-sm.float-right(data-id=fileMeta.fileData, data-delete-key=fileMeta.deleteKey, data-delete-url=fileMeta.deleteUrl)
                      | Poista

      if field.help
        small.form-text.text-muted
          =field.help
          
mixin table-field(field, value, readonly)
  .form-group.table-field.row(data-field-name=field.name,data-field-title=field.title, data-visible-if=field['visible-if'],id="fg-" + field.name,data-values=value,data-draggable=field.draggable,class=field.class,data-readonly=readonly ? "true" : "false")
    .col-12
      .row
        .col-12
          label(for='field-' + field.name)
            =field.title
            if field.required
              |&nbsp;*
      .row
        .col-12
          .table-container
            if !readonly && field.printable
              a(href='#').print-table.float-right
                i.fa.fa-print(aria-hidden="true")
                |&nbsp;Tulosta
            table.table.table-responsive(data-field-name=field.name)
              thead
                if field.draggable
                  th.sort-header
                each column in field.columns
                  if column.type === 'hidden'
                    th(style="display: none")
                  else
                    th(data-calculate-sum=column['calculate-sum'] ? 'true' : 'false',width=column['column-width'])
                      =column.title
              tbody
                if readonly
                  if value && value.length
                    each row in value
                      tr
                        each column, columnIndex in field.columns
                          td
                            =row[column.name]
                else
                  if field.draggable
                    td.sort-handle
                      |&#9995;
                  each column, columnIndex in field.columns
                    if column.type === 'hidden'
                      td(data-column-type=column.type,data-column-name=column.name,style="display: none")
                        input.form-control(type="hidden")
                    else
                      td(data-column-type=column.type,data-column-name=column.name)
                        case column.type 
                          when 'text'
                            input.form-control(type="text",placeholder=column.placeholder,readonly=column.readonly,required=column.required)
                          when 'url'
                            input.form-control(type="url",placeholder=column.placeholder,readonly=column.readonly,required=column.required)
                          when 'autocomplete'
                            input.form-control(type="text",placeholder=column.placeholder,required=column.required,data-source-url=column['source-url'],data-type="autocomplete",readonly=column.readonly)
                          when 'number'
                            input.form-control(type="number",lang='fi',min=column.min,max=column.max,step=column.step,placeholder=column.placeholder,readonly=column.readonly)
                          when 'enum'
                            select.form-control(readonly=column.readonly)
                              each value in column.values
                                option(value=value.value, data-other=value.other)
                                  =value.text
                          when 'date'
                            input.form-control(type="text",name=column.name,title=column.title,required=column.required,data-type="table-date",placeholder=column.placeholder,readonly=column.readonly)
                          when 'time'
                            input.form-control(type="text",name=column.name,title=column.title,required=column.required,data-type="table-time",placeholder=column.placeholder,readonly=column.readonly)
                          when 'html'
                            !=column.html
                          when 'button'
                            button.btn(class=column.class,data-action=column.action)
                              =column.text
              - var printFooter = false
              each column, columnIndex in field.columns
                if column['calculate-sum']
                  - printFooter = true
              if printFooter
                tfoot.border-top
                  tr
                    each column, columnIndex in field.columns
                      td
                        if column['calculate-sum']
                          div.sum-container
                            span.sum
                              =column['calculated-sum']|0
                            span.sum-postfix
                              |&nbsp;
                              =column['sum-postfix']
              if !readonly
                input(type="hidden",name=field.name)                             
      if !readonly && (field["add-rows"] || field.addRows)
        .row
          .col-12
            a.btn.btn-sm.btn-success.add-table-row
              |Lisää rivi
      .row
        .col-12
          if field.help
            small.form-text.text-muted
              =field.help
              
mixin logo-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    .col-12.logo-container
      img.logo(src=field.src)

mixin small-text-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    .col-12.small-text-container
      small
        =field.text

mixin html-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    .col-12.html-container
      !=field.html

mixin submit-field(field, value, readonly)
  .form-group.row(data-visible-if=field['visible-if'],id="fg-" + field.name,class=field.class)
    .col-12
      input.btn.btn-lg.btn-primary(type="submit",value=field.text,disabled=readonly)

mixin unknown-field(field)
  .col-12.error.row
    =field.type
    |&nbsp;is unknown

mixin field(field, value, readonly)
  case field.type 
    when 'text'
      +text-field(field, value, readonly || field.readonly)
    when 'url'
      +url-field(field, value, readonly || field.readonly)
    when 'hidden'
      +hidden-field(field, value)
    when 'email'
      +email-field(field, value, readonly || field.readonly)
    when 'number'
      +number-field(field, value, readonly || field.readonly)
    when 'memo'
      +memo-field(field, value, readonly || field.readonly)
    when 'boolean'
      +boolean-field(field, value, readonly || field.readonly)
    when 'radio'
      +radio-field(field, value, readonly || field.readonly)
    when 'checklist'
      +checklist-field(field, value, readonly || field.readonly)
    when 'date'
      +date-field(field, value, readonly || field.readonly)
    when 'time'
      +time-field(field, value, readonly || field.readonly)
    when 'date-time'
      +date-time-field(field, value, readonly || field.readonly)
    when 'files'
      +files-field(field, value, readonly || field.readonly)
    when 'table'
      +table-field(field, value, readonly || field.readonly)
    when 'logo'
      +logo-field(field, value, readonly || field.readonly)
    when 'small-text'
      +small-text-field(field, value, readonly || field.readonly)
    when 'html'
      +html-field(field, value, readonly || field.readonly)
    when 'submit'
      +submit-field(field, value, readonly || field.readonly)
    when 'select'
      +select-field(field, value, readonly || field.readonly)
    when 'autocomplete'
      +autocomplete-field(field, value, readonly || field.readonly)
    when 'autocomplete-multiple'
      +autocomplete-multiple-field(field, value, readonly || field.readonly)
    default
      +unknown-field(field)
      
  